import{_ as s,c as i,o as a,a1 as t}from"./chunks/framework.C2mR__yb.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"dlux/video.md","filePath":"dlux/video.md"}'),e={name:"dlux/video.md"},o=t('<h2 id="streaming-video-options" tabindex="-1">Streaming Video Options <a class="header-anchor" href="#streaming-video-options" aria-label="Permalink to &quot;Streaming Video Options&quot;">​</a></h2><p>Use the SPK Network to host video files</p><h2 id="load-video-assets" tabindex="-1">Load Video Assets <a class="header-anchor" href="#load-video-assets" aria-label="Permalink to &quot;Load Video Assets&quot;">​</a></h2><p>All videos should be loaded via the asset manager denoted <code>&lt;a-assets&gt;</code></p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a-asset-item</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myVideo&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;d.tube/ipfsHash&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> crossorigin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;anonymous&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a-asset-item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>You can use traditional 16x9 or 360 videos.</p><p>Create an entity with the appropriate geometry (plane, box, sphere) and set its <code>src=&quot;#myVideo&quot; </code> then save</p>',7),n=[o];function d(h,l,p,r,k,c){return a(),i("div",null,n)}const u=s(e,[["render",d]]);export{E as __pageData,u as default};
